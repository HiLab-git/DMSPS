[dataset]
# tensor type (float or double)
tensor_type    = float
task_type      = seg
supervise_type = weak_sup

train_dir = data/ACDC2017/ACDC_for2D
train_csv = data/ACDC2017/ACDC_for2D/train.csv
valid_csv = data/ACDC2017/ACDC_for2D/valid.csv
test_csv  = data/ACDC2017/ACDC_for2D/trainvol.csv
train_dim = 2
train_label_key = scribble
valid_dim = 3
test_dim  = 3
train_batch_size = 24

# data transforms
train_transform = [CustomTransform, PartialLabelToProbability]
valid_transform = [Rescale, LabelToProbability]
test_transform  = [Rescale]

CustomTransform_output_size = [256, 256]
Rescale_output_size  = [256, 256]


[network]
# type of network
net_type = DBNet

# number of class, required for segmentation task
class_num     = 4
in_chns       = 1
feature_chns  = [16, 32, 64, 128, 256]
dropout       = [0.05, 0.1, 0.2, 0.3, 0.5]

[training]
# list of gpus
gpus       = [0]

loss_type     = CrossEntropyLoss

# for optimizers
optimizer     = SGD
nesterov      = False
learning_rate = 1e-2
momentum      = 0.9
weight_decay  = 1e-4

# for lr schedular 
lr_scheduler  = PolynomialLR
lr_power      = 0.9
early_stop_patience = 10000

ckpt_dir    = model/acdc_dmsps

# start iter
iter_start = 0
iter_max   = 30000
iter_valid = 100
iter_save  = [10000, 20000, 30000]

[weakly_supervised_learning]
method_name    = DMSPS
regularize_w   = 8
rampup_start   = 0
rampup_end     = 100

[testing]
# list of gpus
gpus       = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
dmsps_test_mode   = 0
output_dir        = result/acdc_dmsps

sliding_window_enable = False

